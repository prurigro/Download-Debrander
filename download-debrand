#! /usr/bin/env bash

# ---------------------------------------------------------------------------- #
#                               download-debrand                               #
# ---------------------------------------------------------------------------- #
# A script for sanitizing the filenames of downloaded files that were named by #
# release groups. It removes branding and information tags, as well as         #
# standardizing the format of the season and episode identifier.               #
#                                                                              #
# By: Kevin MacMartin                                                          #
# Contact: prurigro at gmail dot com                                           #
#                                                                              #
# Distributed under the GPLv3                                                  #
# Copies can be obtained from gnu.org @ http://www.gnu.org/copyleft/gpl.html   #
# ---------------------------------------------------------------------------- #

#THE NAMES OF VARIOUS RELEASE GROUPS (CASE SENSITIVE)
SCENE=('2HD' '2hd' 'ACAB' 'AFG' 'ANON' 'ASAP' 'asap' 'BAJSKORV' 'BATV' 'BiA' 'BRiTiSH' 'BTN' 'c4tv' 'CaRaT' 'CLOWNSEC' 'COMPULSiON' 'DIMENSION' 'ETRG' 'EVOLVE' 'EXCELLENCE' 'FEVER' 'FoV' 'FQM' 'fqm' 'GREY SHADOW' 'HerMes' 'IMMERSE' 'juggs' 'JYK' 'KILLERS' 'killers' 'LOL' 'lol' 'Max' 'MiNT' 'NoTV' 'ORENJI' 'Orenji' 'P0W4' 'PDTV' 'pdtv' 'PhreakyFlix' 'PublicHD' 'QCF' 'rarbg' 'ReEnc' 'REMARKABLE' 'RiVER' 'RM' 'SaMettv' 'SFD' 'TLA' 'TVSR' 'ViP3R' 'VTV' 'WEB DL' 'WS' 'YIFY')

#TAGS USED BY GROUPS TO GIVE INFORMATION ABOUT THE VIDEO (NOT CASE SENSITIVE)
INFO=('720p' 'aac2.0' 'aac' 'AC3' 'bluray' 'BrRip' 'DTS' 'DVDRIP' 'ffmpeg' 'h.264' 'hdtv' 'proper' 'repack' 'web-dl' 'webrip' 'x264' 'xvid')

function dd_help {
    SCRIPTNAME=$(sed 's/.*\///g' <<< "$0")
    echo -e "Name\n\t${SCRIPTNAME} - tool for stripping scene and quality tags from downloads."
    echo -e "\nDESCRIPTION\n\tThis script can be used to remove tags containing scene and quality\n\tinformation from downloads, leaving only the show name and standardized\n\tepisode information."
    echo -e "\nSYNOPSIS\n\t${SCRIPTNAME} [option] files"
    echo -e "\nOPTIONS"
    echo -e "\t${SCRIPTNAME} -t | --test\n\t\tShow the results of the change without changing any files"
    echo -e "\n\t${SCRIPTNAME} -h | --help\n\t\tDisplay this help"
    echo -e "\nEXAMPLES"
    echo -e "\t${SCRIPTNAME} *\n\t\tRun on all the files in the current directory"
    echo -e "\n\t${SCRIPTNAME} *.mp4\n\t\tRun on all files in the current directory ending in .mp4"
    echo -e "\n\t${SCRIPTNAME} file1 file2\n\t\tRun on 'file1' and 'file2'"
    echo -e "\n\t${SCRIPTNAME} -t file1 file2\n\t\tShow the changes that will be made if run on 'file1' and 'file2'"
}

function dd_newname {
    if [ ! "$NEWNAME" = "$1" ]; then NEWNAME="$1"; fi
}

[[ -z $1 ]] && echo -e "Error: please supply input" && exit 1
if [ "$1" = "-h" -o "$1" = "--help" ]; then dd_help; exit 0; fi
if [ "$1" = "-t" -o "$1" = "--test" ]; then [[ -z $2 ]] && echo -e "Error: please supply input" && exit 1 || TEST=true; fi

for file in "$@"; do
    #Only run if $file is writable and exists, and it isn't a block, character, directory or symbolic link
    if [ -w "$file" -a ! -b "$file" -a ! -c "$file" -a ! -d "$file" -a ! -h "$file" ]; then
        FILENAME="$(sed 's/\\//g' <<< $file)"
        NEWNAME="$FILENAME"

        for group in ${SCENE[@]}; do dd_newname "$(sed 's/'"$group"'//g' <<< $NEWNAME)"; done
        for info in ${INFO[@]}; do dd_newname "$(sed 's/'"$info"'//gi' <<< $NEWNAME)"; done

        dd_newname "$(sed 's/\[\ *\]//g' <<< $NEWNAME)" #Remove leftover '[]'s from groups
        dd_newname "$(sed 's/(\ *)//g' <<< $NEWNAME)" #Remove leftover '()'s from groups
        dd_newname "$(sed 's/{\ *}//g' <<< $NEWNAME)" #Remove leftover '{}'s from groups
        dd_newname "$(sed 's/-/\ /g' <<< $NEWNAME)" #Replace '-'s with spaces
        dd_newname "$(sed 's/\./\ /g' <<< $NEWNAME)" #Replace '.'s with spaces
        dd_newname "$(sed 's/\ \ */\ /g' <<< $NEWNAME)" #Replace multiple spaces with a single space
        dd_newname "$(sed 's/\ \([^\ ]*\)$/\.\1/g' <<< $NEWNAME)" #Replace the final space with a '.'

        dd_newname "$(sed -re 's/S([0-9])E/S0\1E/gi' <<< $NEWNAME)" #Replace S#E with S0#E
        dd_newname "$(sed -re 's/S([0-9][0-9])E([0-9][^[0-9])/S\1E0\2/gi' <<< $NEWNAME)" #Replace S##E# with S0#E0#
        dd_newname "$(sed -re 's/s([0-9]*)e([0-9]*)/S\1E\2/gi' <<< $NEWNAME)" #Replace s##e## with S##E##

        if [[ $TEST ]]; then
            echo -n "TESTING: "
            if [[ -n $NEWNAME ]]; then [[ ! "$FILENAME" = "$NEWNAME" ]] && echo "${FILENAME} -> ${NEWNAME}" || echo "No change to ${FILENAME}"
            else echo "Error while debranding ${FILENAME}"; fi
        else
            if [[ -n $NEWNAME ]]; then [[ ! "$FILENAME" = "$NEWNAME" ]] && mv "$FILENAME" "$NEWNAME"
            else echo "Error while debranding ${FILENAME}"; fi
        fi
    fi
done
