#!/usr/bin/env bash

#
# timecode-download: add the playback time of a media file to the end of its filename
#
# Written by Kevin MacMartin (prurigro@gmail.com)
# Distributed under the GPLv3 (obtained @ http://www.gnu.org/copyleft/gpl.html)
#
# example: The Last Man on Earth.mkv -> The Last Man on Earth [1h26m].mkv
#

# Colours
[[ -t 1 ]] && {
    c_d=$'\e[1;30m' # GREY
    c_r=$'\e[1;31m' # RED
    c_g=$'\e[1;32m' # GREEN
    c_y=$'\e[1;33m' # YELLOW
    c_b=$'\e[1;34m' # BLUE
    c_m=$'\e[1;35m' # VIOLET
    c_t=$'\e[1;36m' # TEAL
    c_w=$'\e[1;37m' # WHITE
    c_c=$'\e[0m'    # DISABLES COLOUR
}

function error {
    printf '%s %s\n' "${c_r}ERROR:$c_c" "$c_w$1$c_c" >&2
}

function tc_help {
    script_name="${0//*\/}"
    printf '\n%s\n\n'      "$c_y$script_name$c_w: Add the playback time of a media file to the end of its filename$c_c"
    printf '%s\n  %s\n\n'  "${c_b}SYNOPSIS$c_c"                            "$c_y$script_name $c_d[${c_r}OPTION$c_d] ${c_m}FILE(S)$c_d]$c_c"
    printf '%s\n' "${c_b}OPTIONS$c_c"
    printf '  %-65s%s\n'   "$c_w-t file(s) $c_d|$c_w --test file(s)$c_c"   'view the changes without making them'
    printf '  %-65s%s\n\n' "$c_w-h $c_d|$c_w --help$c_c"                   'display this help text'
    printf '%s\n' "${c_b}EXAMPLES$c_c"
    printf '  %-58s%s\n'   "$c_y$script_name $c_w*$c_c"                    'run on all files in the directory'
    printf '  %-58s%s\n'   "$c_y$script_name $c_w*.mp4$c_c"                'run on all files ending in .mp4'
    printf '  %-58s%s\n'   "$c_y$script_name ${c_w}file.avi file.mkv$c_c"  'run on file.avi and file.mkv'
    printf '  %-58s%s\n\n' "$c_y$script_name $c_w-t file.avi file.mkv$c_c" 'see how file.avi and file.mkv would change'
}

function tc_addtimecode() {
    TIME="$(ffmpeg -i "$1" 2>&1 \
        | grep Duration \
        | sed 's|^[^0-9]*[0:]*||;s|\..*$||;s|:[^:]*$||;s|:|h|;s|$|m|')"

    if [[ "$TIME" = 'm' || -z "$TIME" ]]; then
        error "cannot extract play time info from $1"
    else
        new_file="$(sed -re "s|(\.[^\.]*)$| \[${TIME}\]\1|" <<< "$1")"
        if (( TEST == 1 )); then
            printf '%s\n' "$1 -> $new_file"
        else
            mv "$1" "$new_file"
        fi
    fi
}

for param in "$@"; do
    case "$param" in
        -t|--test)
            # Exit with an error if no additional input is given
            [[ -z "$2" ]] && {
                error 'please provide at least one media file as an argument'
                tc_help
                exit 1
            }
            # Enable the TEST flag
            TEST=1
            ;;
        -h|--help)
            # Run help and exit with a success
            tc_help
            exit 0
            ;;
        *)
            # PARAM_CHECK says non-flag args were given
            PARAM_CHECK=1
            if [[ -f "$param" ]]; then
                if [[ ! -w "$param" ]]; then
                    error "$param is not writable"
                    exit 1
                fi
                tc_addtimecode "$param"
            else
                # Skip directories and complain about anything else
                [[ -d "$param" ]] \
                    || error "no file exists with the name $param"
            fi
            ;;
    esac
done

# Exit with an error if no inputs is given
[[ "$PARAM_CHECK" = 1 ]] || {
    error 'please provide at least one media file as an argument'
    tc_help
    exit 1
}

exit 0
